# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# ===================================================================

---
# Conditionally disable springdoc on missing api-docs profile
spring:
  config:
    activate:
      on-profile: '!api-docs'
springdoc:
  api-docs:
    enabled: false
---
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          - configprops
          - env
          - health
          - info
          - jhimetrics
          - jhiopenapigroups
          - logfile
          - loggers
          - prometheus
          - threaddump
          - caches
          - liquibase
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState,db
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
    env:
      enabled: true
  health:
    mail:
      enabled: false
  prometheus:
    metrics:
      export:
        enabled: true
        step: 60
  observations:
    key-values:
      application: ${spring.application.name}
  metrics:
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    data:
      repository:
        autotime:
          enabled: true
    tags:
      application: ${spring.application.name}

spring:
  application:
    name: mailmerge

  docker:
    compose:
      enabled: false
      lifecycle-management: start-only
      file: src/main/docker/services.yml

  profiles:
    active: '@spring.profiles.active@'
    group:
      dev:
        - dev
        - api-docs

  jmx:
    enabled: false

  data:
    jpa:
      repositories:
        bootstrap-mode: deferred

  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.timezone.default_storage: NORMALIZE
      hibernate.type.preferred_instant_jdbc_type: TIMESTAMP
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy

  messages:
    basename: i18n/messages

  main:
    allow-bean-definition-overriding: true

  mvc:
    problemdetails:
      enabled: true

  security:
    oauth2:
      client:
        registration:
          azure:
            provider: azure
            client-id: ${AZURE_CLIENT_ID}
            client-secret: ${AZURE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/azure"
            scope:
              - openid
              - profile
              - email
              - offline_access
              - Mail.Send
          oidc:
            provider: azure
            client-id: ${AZURE_CLIENT_ID}
            client-secret: ${AZURE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/oidc"
            scope:
              - openid
              - profile
              - email
              - offline_access
              - Mail.Send
        provider:
          azure:
            authorization-uri: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
            token-uri: https://login.microsoftonline.com/common/oauth2/v2.0/token
            jwk-set-uri: https://login.microsoftonline.com/common/discovery/v2.0/keys
            user-info-uri: https://graph.microsoft.com/oidc/userinfo
            user-name-attribute: sub
          oidc:
            issuer-uri: https://login.microsoftonline.com/organizations/v2.0

  task:
    execution:
      thread-name-prefix: mailmerge-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: mailmerge-scheduling-
      pool:
        size: 2

  thymeleaf:
    mode: HTML

  output:
    ansi:
      console-available: true

  # ===================================================================
  # Local fallback (only used when no profile is active)
  # ===================================================================
  liquibase:
    enabled: false
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console

server:
  servlet:
    session:
      cookie:
        http-only: true

springdoc:
  show-actuator: true

info:
  display-ribbon-on-profiles: 'dev'

jhipster:
  clientApp:
    name: 'mailmergeApp'
  mail:
    from: mailmerge@localhost
  api-docs:
    default-include-pattern: /api/**
    management-include-pattern: /management/**
    title: Mailmerge API
    description: Mailmerge API documentation
    version: 0.0.1
  security:
    content-security-policy: "default-src 'self'; frame-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://storage.googleapis.com; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:"
    oauth2:
      audience:
        - account
        - api://default

